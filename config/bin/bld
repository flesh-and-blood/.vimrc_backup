#!/bin/bash

cmake_build_type()
{
    build_type=$1
    source_path=$2

    echo "build type ${build_type} ${source_path}"

    if [ ! -d "./${build_type}" ]; then
        mkdir ${build_type}
    fi

    echo "cd ./${build_type}"
    cd "./${build_type}"

    echo "cmake -G Ninja -DCMAKE_BUILD_TYPE=${build_type} -S${source_path} -B."
    cmake -G Ninja -DCMAKE_BUILD_TYPE=${build_type} -S${source_path} -B.

    echo "ninja"
    ninja

    cd ..
    return 0
}

build() 
{
    source_path="${PWD}"

    if [ -d "$PWD/build" ] ; then
		echo "cd "$PWD/build""
        cd "$PWD/build"
    else
		echo "mkdir "$PWD/build" && cd "$PWD/build""
        mkdir "$PWD/build" && cd "$PWD/build"
    fi

    if [ -f "../CMakeLists.txt" ] ; then 
		case $1 in
			release) 
                cmake_build_type Release ${source_path}
				;;
			re)
                cmake_build_type Release ${source_path}
				;;
            r)
                cmake_build_type Release ${source_path}
				;;
			debug)
                cmake_build_type Debug ${source_path}
				;;
			de)
                cmake_build_type Debug ${source_path}
				;;
			d)
                cmake_build_type Debug ${source_path}
				;;
			all)
                cmake_build_type Release ${source_path}
                cmake_build_type Debug ${source_path}
				;;
			a)
                cmake_build_type Release ${source_path}
                cmake_build_type Debug ${source_path}
				;;
			"")
                cmake_build_type Release ${source_path}
                cmake_build_type Debug ${source_path}
				;;
			*)
				echo "unknow type $1"
                return -1
				;;
		esac

    else if [ -f "../makefile" ] || [ -f "../Makefile" ] || [ -f "../GNUMakefile" ]; then 
		echo "make -j 8 -C .."
		make -j 8 -C ..

    fi fi

    cd ..
    return 0
}

build $*
